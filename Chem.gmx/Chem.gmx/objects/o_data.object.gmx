<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>color = c_black
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>temp = draw_get_color()
draw_set_color(c_black)
if (global.mode =0 ){
    draw_set_color(color)
    draw_set_font(f_small);
    draw_text(x+2, y, owner.atomic_num );
    draw_set_font(f_big);
    draw_text(x+2, y+15, owner.element );
    //if atomic number &gt; 83, then they are all unstable and will be in brackets, 61 too
    if (owner.atomic_num &gt; 83 || owner.atomic_num = 61|| owner.atomic_num = 43)
        out = string(owner.name)+"#("+string(owner.weight)+")";
    else
        out = string(owner.name)+"#"+string(owner.weight);
    draw_set_font(f_small); 
    draw_text_ext(x+2, y+50, out ,15,94);
    //draw_text_transformed(x, y+30, owner.name, 0.6, 0.6, 0);
    
}
else if (global.mode = 1 ){
    //1 is ionization energy
    draw_set_font(f_small);
    if (owner.element = "Sym")
        draw_text(x+2, y, "Ionization Energy");
    else if (owner.I_E &gt; 0)
        draw_text(x+2, y, owner.I_E);
    
}
else if (global.mode = 2 ){
    //2 is EN
    draw_set_font(f_small);
    if (owner.element = "Sym")
        draw_text(x+2, y, "Electronegativity");
    else if (owner.EN&gt;0)
        draw_text(x+2, y, owner.EN);
    
}
else if (global.mode = 3 ){
    //3 is weight
    draw_set_font(f_small);
    if (owner.element = "Sym")
        draw_text(x+2, y, "Weight");
    else if(owner.weight &gt; 0)
        draw_text(x+2, y, owner.weight);
    
}
else if (global.mode = 4 ){
    //4 is melting point
    draw_set_font(f_small);
    if (owner.element = "Sym")
        draw_text(x+2, y, "Melting Point");
    else if (owner.melting &gt; 0 )
        draw_text(x+2, y, owner.melting);
    
}
else if (global.mode = 5 ){
    //5 is boiling point
    draw_set_font(f_small);
    if (owner.element = "Sym")
        draw_text(x+2, y, "Boiling point");
    else if (owner.boiling &gt; 0 )
        draw_text(x+2, y, owner.boiling);
    
}
draw_set_color(temp)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
